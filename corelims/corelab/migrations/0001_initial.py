# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2023-05-13 16:49
from __future__ import unicode_literals

import corelab.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BatchGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='BatchGroupTests',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('batch_group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='batchtest_batchgroup', to='corelab.BatchGroups', verbose_name='Batch group')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='BDDarahMasuk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('in_date', models.DateField(auto_now_add=True, verbose_name='In date')),
                ('nomor_kantong', models.CharField(max_length=50, unique=True, verbose_name='Nomor kantong')),
                ('blood_type', models.CharField(blank=True, choices=[('A', 'A'), ('B', 'B'), ('O', 'O'), ('AB', 'AB')], max_length=3, verbose_name='blood type')),
                ('blood_rhesus', models.CharField(blank=True, choices=[('+', '+'), ('-', '-')], max_length=3, verbose_name='blood rhesus')),
                ('aftap_date', models.DateField(blank=True, null=True, verbose_name='Aftap date')),
                ('process_date', models.DateField(blank=True, null=True, verbose_name='Process date')),
                ('expired_date', models.DateField(blank=True, null=True, verbose_name='Expired date')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Note')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
            ],
        ),
        migrations.CreateModel(
            name='BDGrupJenisDarah',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100, verbose_name='code')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('active', models.BooleanField(default=True, verbose_name='Active?')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='BDJenisDarah',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100, verbose_name='code')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('active', models.BooleanField(default=True, verbose_name='Active?')),
                ('unit', models.CharField(max_length=100, verbose_name='Unit')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bdjenisdarah_bdgrupjenisdarah', to='corelab.BDGrupJenisDarah', verbose_name='Group')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='BDPermintaanDarahDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Quantity')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('bd_jenis_darah', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bdpermintaanbankdarahdetail_bdjenisdarah', to='corelab.BDJenisDarah', verbose_name='Permintaan jenis darah')),
            ],
        ),
        migrations.CreateModel(
            name='BDPermintaanDarahHeader',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_diagnosis', models.TextField(verbose_name='Diagnosis note')),
                ('note_transfusion_reason', models.TextField(verbose_name='Transfusion reason')),
                ('Hb', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Hb')),
                ('blood_type', models.CharField(blank=True, choices=[('A', 'A'), ('B', 'B'), ('O', 'O'), ('AB', 'AB')], max_length=3, verbose_name='blood type')),
                ('blood_rhesus', models.CharField(blank=True, choices=[('+', '+'), ('-', '-')], max_length=3, verbose_name='blood rhesus')),
                ('pervious_transfusion', models.BooleanField(default=False, verbose_name='Pervious transfusion')),
                ('pervious_transfusion_date', models.DateField(blank=True, null=True, verbose_name='Pervious transfusion date')),
                ('pervious_transfusion_effect', models.BooleanField(default=False, verbose_name='Pervious transfusion effect')),
                ('pervious_transfusion_effect_desc', models.TextField(blank=True, null=True, verbose_name='Pervious transfusion effect description')),
                ('coombs_test', models.BooleanField(default=False, verbose_name='Coombs test')),
                ('coombs_test_location', models.TextField(blank=True, null=True, verbose_name='Coombs test location')),
                ('coombs_test_date', models.DateField(blank=True, null=True, verbose_name='Coombs test date')),
                ('coombs_test_result', models.TextField(blank=True, null=True, verbose_name='Coombs test result')),
                ('condition_women_pregnancy_count', models.TextField(blank=True, null=True, verbose_name='Condition women pregnancy count')),
                ('condition_women_abortus', models.TextField(blank=True, null=True, verbose_name='Condition woman abortus?')),
                ('condition_women_neonatus_hemolitic', models.TextField(blank=True, null=True, verbose_name='Condition women neonatus hemolitic')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
            ],
        ),
        migrations.CreateModel(
            name='Closing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('closing_date', models.DateField(verbose_name='Closing date')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='ClosingStockIn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_in', models.DateField(auto_now_add=True, verbose_name='Date in')),
                ('lot_number', models.CharField(max_length=30, null=True, verbose_name='Lot number')),
                ('lot_expired', models.DateField(null=True, verbose_name='Expired at')),
                ('quantity', models.IntegerField(default=1, verbose_name='Quantity')),
                ('dateofcreation', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created at')),
                ('lastmodification', models.DateTimeField(blank=True, null=True, verbose_name='Last modified')),
                ('closing', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='corelab.Closing', verbose_name='Closing')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='ClosingUsingProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_use', models.DateField(auto_now_add=True, verbose_name='Date used')),
                ('lot_number', models.CharField(max_length=30, null=True, verbose_name='Lot number')),
                ('lot_expired', models.DateField(null=True, verbose_name='Expired at')),
                ('unit_used', models.IntegerField(default=1)),
                ('dateofcreation', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created at')),
                ('lastmodification', models.DateTimeField(blank=True, null=True, verbose_name='Last modified')),
                ('closing', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='corelab.Closing', verbose_name='Closing')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='Diagnosis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Diangosis Name')),
                ('ext_code', models.CharField(max_length=30, verbose_name='External code')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
            options={
                'verbose_name': 'Diagnosis',
                'verbose_name_plural': 'Diagnosis',
            },
        ),
        migrations.CreateModel(
            name='Doctors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Doctor Name')),
                ('ext_code', models.CharField(max_length=30, verbose_name='External code')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
            options={
                'verbose_name': 'Doctor',
                'verbose_name_plural': 'Doctors',
            },
        ),
        migrations.CreateModel(
            name='Genders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Gender Name')),
                ('code', models.CharField(max_length=30, null=True, verbose_name='Code')),
                ('ext_code', models.CharField(max_length=30, verbose_name='External code')),
                ('inst_code', models.CharField(max_length=30, null=True, verbose_name='Instrument code')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
            options={
                'verbose_name': 'Gender',
                'verbose_name_plural': 'Genders',
            },
        ),
        migrations.CreateModel(
            name='HistoryOrders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_code', models.CharField(max_length=20, null=True, verbose_name='Action code')),
                ('action_user', models.CharField(max_length=20, null=True, verbose_name='Action by')),
                ('action_date', models.DateTimeField(null=True, verbose_name='Action date')),
                ('action_text', models.CharField(max_length=1000, null=True, verbose_name='Action text')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='Hosts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='Code')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('active', models.BooleanField(default=True, verbose_name='Active?')),
                ('input_path', models.CharField(max_length=100, verbose_name='input path')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='InstrumentBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('0', 'New'), ('1', 'Sent'), ('2', 'Process'), ('3', 'Complete')], default='0', max_length=3, verbose_name='Batch status')),
                ('note', models.CharField(blank=True, max_length=100, null=True, verbose_name='Note')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
            ],
        ),
        migrations.CreateModel(
            name='InstrumentFlags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flag_code', models.CharField(max_length=100, verbose_name='Host flag code')),
                ('flag_description', models.CharField(max_length=100, verbose_name='Host flag description')),
                ('flag_mark', models.CharField(blank=True, max_length=100, null=True, verbose_name='Host flag mark')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
            ],
        ),
        migrations.CreateModel(
            name='Instruments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='Code')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('active', models.BooleanField(default=False, verbose_name='Batch mode?')),
                ('batch_mode', models.BooleanField(default=True, verbose_name='Active?')),
                ('driver', models.CharField(blank=True, max_length=100, null=True, verbose_name='Driver name')),
                ('receive_ref_ranges', models.BooleanField(default=True, verbose_name='Receive refranges from instrument')),
                ('connection_type', models.CharField(blank=True, choices=[('SER', 'Serial'), ('TCP', 'TCP/IP')], max_length=3, null=True, verbose_name='Connection type')),
                ('serial_port', models.CharField(blank=True, choices=[('COM1', 'COM1'), ('COM2', 'COM2'), ('COM3', 'COM3'), ('COM4', 'COM4'), ('COM5', 'COM5'), ('COM6', 'COM6'), ('COM7', 'COM7'), ('COM8', 'COM8'), ('COM9', 'COM9'), ('COM10', 'COM10'), ('COM11', 'COM11'), ('COM12', 'COM12'), ('COM13', 'COM13'), ('COM14', 'COM14'), ('COM15', 'COM15'), ('COM16', 'COM16'), ('COM17', 'COM17'), ('COM18', 'COM18'), ('COM19', 'COM19'), ('COM20', 'COM20'), ('COM21', 'COM21'), ('COM22', 'COM22'), ('COM23', 'COM23'), ('COM24', 'COM24'), ('COM25', 'COM25'), ('COM26', 'COM26'), ('COM27', 'COM27'), ('COM28', 'COM28'), ('COM29', 'COM29'), ('COM30', 'COM30'), ('COM31', 'COM31'), ('COM32', 'COM32'), ('COM33', 'COM33'), ('COM34', 'COM34'), ('COM35', 'COM35'), ('COM36', 'COM36'), ('COM37', 'COM37'), ('COM38', 'COM38'), ('COM39', 'COM39'), ('COM40', 'COM40')], max_length=5, null=True, verbose_name='Serial port name')),
                ('serial_baud_rate', models.CharField(blank=True, choices=[('9600', '9600'), ('19200', '19200')], max_length=10, null=True, verbose_name='Serial baud rate')),
                ('serial_data_bit', models.CharField(blank=True, choices=[('7', '7'), ('8', '8')], max_length=1, null=True, verbose_name='Serial data bit')),
                ('serial_stop_bit', models.CharField(blank=True, choices=[('1', '1'), ('2', '2')], max_length=3, null=True, verbose_name='Serial stop bit')),
                ('serial_parity', models.CharField(blank=True, choices=[('N', 'None'), ('E', 'Even')], max_length=3, null=True, verbose_name='Serial parity')),
                ('tcp_conn_type', models.CharField(blank=True, choices=[('S', 'Server'), ('C', 'Client')], max_length=3, null=True, verbose_name='TCP/IP Connection type')),
                ('tcp_host', models.GenericIPAddressField(blank=True, null=True, verbose_name='TCP Host name (IP Address)')),
                ('tcp_port', models.IntegerField(blank=True, null=True, verbose_name='TCP Port')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='InstrumentTests',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_code', models.CharField(max_length=100, verbose_name='Host test code')),
                ('result_type', models.CharField(choices=[('R', 'RAW'), ('N', 'NUMBERIC'), ('A', 'ALFANUMERIC')], default='R', max_length=3, verbose_name='Result type')),
                ('result_selection', models.CharField(choices=[('1', 'Result 1'), ('2', 'Result 2'), ('3', 'Result 3')], default='1', max_length=3, verbose_name='Result selection')),
                ('sql_script', models.TextField(blank=True, null=True, verbose_name='SQL Script')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='instrumentflags_instrument', to='corelab.Instruments', verbose_name='Instrument')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='Insurance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Insurance Name')),
                ('ext_code', models.CharField(max_length=30, verbose_name='External code')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
            options={
                'verbose_name': 'Insurence',
                'verbose_name_plural': 'Insurences',
            },
        ),
        migrations.CreateModel(
            name='LabelPrinters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Printer barcode name', max_length=100, verbose_name='Name')),
                ('active', models.BooleanField(default=True, verbose_name='is active?')),
                ('com_port', models.CharField(help_text='eq: COM10,COM11', max_length=100, verbose_name='Com serial port name')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='Labels',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scope', models.CharField(choices=[('O', 'ORDER'), ('S', 'SAMPEL')], default='S', max_length=3, verbose_name='Label scope')),
                ('zpl_code', models.TextField(verbose_name='ZPL code, to change field bracket != with field, example order_no put string <order_no>, patient_id put string <patient_id> and so on. supported field order_no,patient_id,patient_name..')),
                ('number', models.IntegerField(verbose_name='Number of copies label')),
                ('active', models.BooleanField(default=True, verbose_name='Active?')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(max_length=200)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MBAnatomicLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='Code')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('active', models.BooleanField(default=True, verbose_name='Active?')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='MBAntibiogramAntibiotics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='MBAntibiograms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='Code')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('relative_value_unit', models.CharField(blank=True, max_length=200, verbose_name='Relative value unit')),
                ('sort', models.IntegerField(help_text='Sorted priority', verbose_name='Sort')),
                ('active', models.BooleanField(default=True, verbose_name='Active?')),
                ('print_assesment', models.BooleanField(default=True, verbose_name='Print assessment')),
                ('print_method', models.BooleanField(default=True, verbose_name='Print method')),
                ('print_label', models.BooleanField(default=True, verbose_name='Print label')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='MBAntibioticFamilies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='Code')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('sort', models.IntegerField(help_text='Sorted priority', verbose_name='Sort')),
                ('active', models.BooleanField(default=True, verbose_name='Active?')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='MBAntibioticMethods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='Code')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('sort', models.IntegerField(help_text='Sorted priority', verbose_name='Sort')),
                ('active', models.BooleanField(default=True, verbose_name='Active?')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='MBAntibiotics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='Code')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('low', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='low')),
                ('high', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='high')),
                ('sort', models.IntegerField(help_text='Sorted priority', verbose_name='Sort')),
                ('active', models.BooleanField(default=True, verbose_name='Active?')),
                ('print_assesment', models.BooleanField(default=True, verbose_name='Print assessment')),
                ('print_method', models.BooleanField(default=True, verbose_name='Print method')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('family', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='mbantibiotic_mbantibioticfamilies', to='corelab.MBAntibioticFamilies', verbose_name='Antibiotic family')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='MBCultureMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='Code')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('relative_value_unit', models.CharField(blank=True, max_length=200, verbose_name='Relative value unit')),
                ('sort', models.IntegerField(help_text='Sorted priority', verbose_name='Sort')),
                ('active', models.BooleanField(default=True, verbose_name='Active?')),
                ('can_seeded', models.BooleanField(default=True, verbose_name='it can be seeded.')),
                ('visible', models.BooleanField(default=True, verbose_name='Visible')),
                ('print_label', models.BooleanField(default=True, verbose_name='Print label')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='MBResultDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lastmodification', models.DateTimeField(auto_now_add=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
                ('mb_antibiogram', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='mbresultdetail_mbantibiogram', to='corelab.MBAntibiograms', verbose_name='MB Antibiogram')),
            ],
        ),
        migrations.CreateModel(
            name='MBResultDetailAntibiotics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('low', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='low')),
                ('high', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='high')),
                ('num_value', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='value')),
                ('char_value', models.CharField(blank=True, choices=[('R', 'RESISTENCE'), ('I', 'INTERMEDIATE'), ('S', 'SENSITIVE')], max_length=2, null=True, verbose_name='char value')),
                ('lastmodification', models.DateTimeField(auto_now_add=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
                ('mb_antibiotic', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='mbresultdetailantibiotic_mbaresultdetail', to='corelab.MBAntibiotics', verbose_name='MB Antibiotic')),
                ('mb_result_detail', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='mbresultdetailantibiotic_mbresultdetail', to='corelab.MBResultDetail', verbose_name='MB Result Detail')),
            ],
        ),
        migrations.CreateModel(
            name='MBResultGroupItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Active?')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='MBResultGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='Code')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('active', models.BooleanField(default=True, verbose_name='Active?')),
                ('sort', models.IntegerField(help_text='Sorted priority', verbose_name='Sort')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='MBResultHeader',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lastmodification', models.DateTimeField(auto_now_add=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='MBResults',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='Code')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('type', models.CharField(blank=True, choices=[('AL', 'All type'), ('MT', 'Main test'), ('CM', 'Culture medium'), ('ST', 'Secondary test'), ('AB', 'Antibogram'), ('ID', 'Isolate description'), ('MQ', 'Microorganism quantification'), ('MO', 'Microorganism'), ('AB', 'Antibiotic')], max_length=3, null=True, verbose_name='result type')),
                ('active', models.BooleanField(default=True, verbose_name='Active?')),
                ('sort', models.IntegerField(help_text='Sorted priority', verbose_name='Sort')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='MBTestCultureMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
                ('mb_culture_media', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='mbtestculturemedia_mbculturemedia', to='corelab.MBCultureMedia', verbose_name='Culture media')),
            ],
        ),
        migrations.CreateModel(
            name='Menus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True, unique=True, verbose_name='Test Name')),
                ('class_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Class name')),
                ('active', models.BooleanField(default=True, verbose_name='Active?')),
                ('sort', models.IntegerField(help_text='Sorted priority', verbose_name='Sort')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='menu_parent', to='corelab.Menus')),
            ],
        ),
        migrations.CreateModel(
            name='OrderComments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('internal', models.BooleanField(default=True, verbose_name='Internal')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comment')),
                ('dateofcreation', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
            options={
                'verbose_name': 'OrderComment',
                'verbose_name_plural': 'OrderComments',
            },
        ),
        migrations.CreateModel(
            name='OrderDiagnosis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateofcreation', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('diagnosis', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='order_diagnosis', to='corelab.Diagnosis', verbose_name='Diagnosis')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
            options={
                'verbose_name': 'Order diagnosis',
                'verbose_name_plural': 'Order diagnosis',
                'ordering': ['order', 'diagnosis'],
                'permissions': (('view_ordertests', 'Can view order tests'),),
            },
        ),
        migrations.CreateModel(
            name='Ordering',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_order', models.DateField(auto_now_add=True, verbose_name='Date order')),
                ('status', models.CharField(choices=[('1', 'New'), ('2', 'Partially delivered'), ('9', 'Complete'), ('0', 'Cancel')], default='1', max_length=1, verbose_name='Ordering status')),
                ('quantity', models.IntegerField(default=1, verbose_name='Quantity')),
                ('dateofcreation', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created at')),
                ('lastmodification', models.DateTimeField(blank=True, null=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='OrderingStockin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='OrderResults',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_header', models.BooleanField(default=False, verbose_name='is header?')),
                ('unit', models.CharField(max_length=100, null=True, verbose_name='Result unit')),
                ('ref_range', models.CharField(max_length=200, null=True, verbose_name='Reference range')),
                ('patologi_mark', models.CharField(max_length=20, null=True, verbose_name='Patologi mark')),
                ('validation_status', models.IntegerField(default=0, verbose_name='Validation status')),
                ('techval_user', models.CharField(max_length=20, null=True, verbose_name='Techical validated by')),
                ('techval_date', models.DateTimeField(null=True, verbose_name='Technical Validated date')),
                ('medval_user', models.CharField(max_length=20, null=True, verbose_name='Medical validated by')),
                ('medval_date', models.DateTimeField(null=True, verbose_name='Medical validated date')),
                ('print_status', models.IntegerField(default=0, verbose_name='Print status')),
                ('print_user', models.CharField(max_length=20, null=True, verbose_name='Print by')),
                ('print_date', models.DateTimeField(null=True, verbose_name='Print date')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
            options={
                'permissions': (('techval', 'Technical validating results'), ('medval', 'Medical validating result'), ('repeat', 'Repeating result')),
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_date', models.DateField(auto_now_add=True, verbose_name='Order date')),
                ('status', models.CharField(choices=[('0', 'Pending Result'), ('1', 'Pending Tech. Val.'), ('2', 'Pending Med. Val'), ('3', 'Pending Print'), ('4', 'Completed')], default='0', max_length=3, verbose_name='Status')),
                ('number', models.CharField(blank=True, default=corelab.models.auto_order_no, max_length=100, null=True, unique=True, verbose_name='Number')),
                ('note', models.CharField(blank=True, max_length=100, null=True, verbose_name='Note/Comment')),
                ('conclusion', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Conclusion')),
                ('dateofcreation', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('ref_no', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ref No.')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
            ],
            options={
                'verbose_name': 'Urutan',
                'verbose_name_plural': 'Orders',
                'ordering': ['number', 'origin'],
                'permissions': (('view_orders', 'Can view orders'),),
            },
        ),
        migrations.CreateModel(
            name='OrderSampleLogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('0', 'Waiting'), ('1', 'Received'), ('2', 'Request new sample'), ('3', 'Missing')], default='0', max_length=3, verbose_name='Status')),
                ('note', models.TextField(blank=True, null=True, verbose_name='note')),
                ('dateofcreation', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='OrderSamples',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample_no', models.CharField(help_text='Sample id', max_length=100, verbose_name='sample id')),
                ('status', models.CharField(choices=[('0', 'Waiting'), ('1', 'Received'), ('2', 'Request new sample'), ('3', 'Missing')], default='0', max_length=3, verbose_name='Status')),
                ('dateofcreation', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
            options={
                'verbose_name': 'Order samples',
                'verbose_name_plural': 'Order samples',
                'ordering': ['order', 'sample_no'],
                'permissions': (('view_ordersamples', 'Can view order samples'),),
            },
        ),
        migrations.CreateModel(
            name='OrderTests',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Price')),
                ('dateofcreation', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
            options={
                'verbose_name': 'Order test',
                'verbose_name_plural': 'Order tests',
                'ordering': ['order', 'test'],
                'permissions': (('view_ordertests', 'Can view order tests'),),
            },
        ),
        migrations.CreateModel(
            name='Organizations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Organization Name')),
                ('ext_code', models.CharField(max_length=30, verbose_name='External code')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
            options={
                'verbose_name': 'Organisation',
                'verbose_name_plural': 'Organisations',
            },
        ),
        migrations.CreateModel(
            name='Origins',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Origin Name')),
                ('ext_code', models.CharField(max_length=30, verbose_name='External code')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
            options={
                'verbose_name': 'Origin',
                'verbose_name_plural': 'Origins',
            },
        ),
        migrations.CreateModel(
            name='PackageCondition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Package condition', max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Parameters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('char_value', models.CharField(blank=True, max_length=100, null=True, verbose_name='Char value')),
                ('num_value', models.IntegerField(blank=True, null=True, verbose_name='Numeric value')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
            options={
                'verbose_name': 'Parameter',
                'verbose_name_plural': 'Parameters',
            },
        ),
        migrations.CreateModel(
            name='PatientComments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('internal', models.BooleanField(default=True, verbose_name='Internal')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comment')),
                ('dateofcreation', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
            options={
                'verbose_name': 'PatientComment',
                'verbose_name_plural': 'PatientComments',
            },
        ),
        migrations.CreateModel(
            name='Patients',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.CharField(help_text='Medical record number', max_length=100, unique=True, verbose_name='Patient ID')),
                ('name', models.CharField(help_text='Patient Name', max_length=100, verbose_name='Name')),
                ('dob', models.DateField(help_text='Date format: DD-MM-YYYY', verbose_name='Date of birth')),
                ('address', models.CharField(help_text='Patient Address', max_length=100, verbose_name='Address')),
                ('data0', models.CharField(blank=True, help_text='Additional data 0', max_length=100, null=True, verbose_name='Data 0')),
                ('data1', models.CharField(blank=True, help_text='Additional data 1', max_length=100, null=True, verbose_name='Data 1')),
                ('data2', models.CharField(blank=True, help_text='Additional data 3', max_length=100, null=True, verbose_name='Data 2')),
                ('dateofcreation', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, null=True, verbose_name='Created at')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('gender', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='corelab.Genders', verbose_name='Gender')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
            options={
                'verbose_name': 'Patient',
                'verbose_name_plural': 'Patients',
                'ordering': ['patient_id', 'name'],
                'permissions': (('view_patients', 'Can view test patients'),),
            },
        ),
        migrations.CreateModel(
            name='PBSResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_result', models.TextField(blank=True, null=True, verbose_name='Text result')),
                ('lastmodification', models.DateTimeField(blank=True, null=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='PBSTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Nama test')),
                ('active', models.BooleanField(default=True, verbose_name='Active?')),
                ('sort', models.IntegerField(help_text='Sorted priority', verbose_name='Sort')),
                ('dateofcreation', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created at')),
                ('lastmodification', models.DateTimeField(blank=True, null=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='PhysicalCondition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Physical condition', max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Priority',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Group Name')),
                ('ext_code', models.CharField(max_length=30, verbose_name='External code')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
            options={
                'verbose_name': 'Priority',
                'verbose_name_plural': 'Priorities',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(blank=True, help_text='Product number', max_length=30, null=True)),
                ('name', models.CharField(help_text='Product name', max_length=200, null=True)),
                ('item_number', models.CharField(help_text='Product item name', max_length=200, null=True)),
                ('ean_upc', models.CharField(blank=True, help_text='EAN (European Article Number) / UPC (Universal Product Code) / GTIN (Global Trade In Number)', max_length=200, null=True, unique=True)),
                ('package_size', models.CharField(blank=True, help_text='Package size', max_length=200, null=True)),
                ('base_multiplier', models.IntegerField(blank=True, null=True, verbose_name='Base multiplier')),
                ('is_lot_controlled', models.BooleanField(default=False, verbose_name='is lot controlled?')),
                ('lead_time', models.IntegerField(blank=True, help_text='Lead time in day(s)', null=True, verbose_name='Lead time')),
                ('dateofcreation', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created at')),
                ('lastmodification', models.DateTimeField(blank=True, null=True, verbose_name='Last modified')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ['name'],
                'permissions': (('view_product', 'Can view products'),),
            },
        ),
        migrations.CreateModel(
            name='ProductGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Product group name', max_length=30, null=True)),
                ('lastmodification', models.DateTimeField(blank=True, null=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='ProductLot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(verbose_name='Lot number')),
                ('expired', models.DateField(verbose_name='Expired at')),
                ('dateofcreation', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created at')),
                ('lastmodification', models.DateTimeField(blank=True, null=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='corelab.Product')),
            ],
            options={
                'verbose_name': 'Product Lot',
                'verbose_name_plural': 'Product Lots',
                'ordering': ['product'],
                'permissions': (('view_productlot', 'Can view product lots'),),
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100, verbose_name='code')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('active', models.BooleanField(default=True, verbose_name='Active?')),
                ('sort', models.IntegerField(blank=True, help_text='Sorted priority', null=True, verbose_name='Sort')),
                ('ext_code', models.CharField(blank=True, max_length=30, null=True, verbose_name='External code')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='ProfileTests',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='paneltest_panel', to='corelab.Profile', verbose_name='Panel')),
            ],
        ),
        migrations.CreateModel(
            name='ReceivedSamples',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='RequestNewReasons',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Request new reason', max_length=100, verbose_name='Name')),
                ('dateofcreation', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='ResultComments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('internal', models.BooleanField(default=True, verbose_name='Internal')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comment')),
                ('dateofcreation', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
            options={
                'verbose_name': 'ResultComment',
                'verbose_name_plural': 'ResultComments',
            },
        ),
        migrations.CreateModel(
            name='ResultFlags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('instrument_flag', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='resultflags_instrumentflag', to='corelab.InstrumentFlags', verbose_name='Result')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='Results',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numeric_result', models.FloatField(null=True, verbose_name='Numeric result')),
                ('alfa_result', models.CharField(max_length=100, null=True, verbose_name='Alfanumeric result')),
                ('text_result', models.TextField(null=True, verbose_name='Text result')),
                ('image_result', models.BinaryField(null=True, verbose_name='Image result')),
                ('ref_range', models.CharField(max_length=100, null=True, verbose_name='Reference range')),
                ('mark', models.CharField(max_length=3, null=True, verbose_name='Result mark')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('flag', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='results_instrumentflag', to='corelab.InstrumentFlags', verbose_name='Instrument flag')),
                ('instrument', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='results_instrument', to='corelab.Instruments', verbose_name='Instrument')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='ReturningProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_return', models.DateField(auto_now_add=True, verbose_name='Date return')),
                ('lot_number', models.CharField(max_length=30, null=True, verbose_name='Lot number')),
                ('lot_expired', models.DateField(null=True, verbose_name='Expired at')),
                ('unit_return', models.IntegerField(default=1)),
                ('dateofcreation', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created at')),
                ('lastmodification', models.DateTimeField(blank=True, null=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='corelab.Product')),
            ],
            options={
                'ordering': ['-lastmodification'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Service Name')),
                ('ext_code', models.CharField(max_length=30, verbose_name='External code')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
            },
        ),
        migrations.CreateModel(
            name='Specimens',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Specimen Name')),
                ('suffix_code', models.CharField(max_length=3, verbose_name='Suffix code')),
            ],
            options={
                'verbose_name': 'Specimen',
                'verbose_name_plural': 'Specimens',
            },
        ),
        migrations.CreateModel(
            name='StockAdjust',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adjust_date', models.DateField(auto_now_add=True, verbose_name='Adjust date')),
                ('lot_number', models.CharField(max_length=30, null=True, verbose_name='Lot number')),
                ('lot_expired', models.DateField(null=True, verbose_name='Expired at')),
                ('quantity', models.IntegerField(default=1, verbose_name='Quantity')),
                ('dateofcreation', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created at')),
                ('lastmodification', models.DateTimeField(blank=True, null=True, verbose_name='Last modified')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='corelab.Product')),
            ],
        ),
        migrations.CreateModel(
            name='StockAdjustReason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=30, verbose_name='Reason')),
            ],
        ),
        migrations.CreateModel(
            name='StockIn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_in', models.DateField(auto_now_add=True, verbose_name='Date in')),
                ('lot_number', models.CharField(max_length=30, null=True, verbose_name='Lot number')),
                ('lot_expired', models.DateField(null=True, verbose_name='Expired at')),
                ('quantity', models.IntegerField(default=1, verbose_name='Quantity')),
                ('dateofcreation', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created at')),
                ('lastmodification', models.DateTimeField(blank=True, null=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
                ('package_condition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='corelab.PackageCondition')),
                ('physical_condition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='corelab.PhysicalCondition')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='corelab.Product')),
            ],
            options={
                'ordering': ['-lastmodification'],
            },
        ),
        migrations.CreateModel(
            name='StockInLot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=30, null=True, verbose_name='Lot number')),
                ('expired', models.DateField(null=True, verbose_name='Expired at')),
                ('dateofcreation', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created at')),
                ('lastmodification', models.DateTimeField(blank=True, null=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
                ('stock_in', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='_stockin_lot', to='corelab.StockIn')),
            ],
            options={
                'ordering': ['-lastmodification'],
            },
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(max_length=200)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='corelab.Location')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SuperGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('abbreviation', models.CharField(max_length=100, verbose_name='Abbreviation')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
            options={
                'verbose_name': 'Super group',
                'verbose_name_plural': 'Super groups',
                'ordering': ['name'],
                'permissions': (('view_supergroups', 'Can view supergroups'),),
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('rep', models.CharField(blank=True, help_text='contact person name', max_length=45, null=True)),
                ('rep_phone', models.CharField(blank=True, help_text='contact telp', max_length=16, null=True)),
                ('dateofcreation', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created at')),
                ('lastmodification', models.DateTimeField(blank=True, null=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
            options={
                'verbose_name': 'Supplier',
                'verbose_name_plural': 'Suppliers',
                'permissions': (('view_supplier', 'Can view suppliers'),),
            },
        ),
        migrations.CreateModel(
            name='TemperatureCondition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='TestGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Group Name')),
                ('sort', models.IntegerField(help_text='Sorted priority', verbose_name='Sort')),
                ('show_request', models.BooleanField(default=True, verbose_name='Show panel at request form')),
                ('dateofcreation', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
                ('supergroup', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='testgroup_supergroup', to='corelab.SuperGroups', verbose_name='Super Group')),
            ],
            options={
                'verbose_name': 'Test group',
                'verbose_name_plural': 'Test groups',
                'ordering': ['name'],
                'permissions': (('view_testgroups', 'Can view testgroups'),),
            },
        ),
        migrations.CreateModel(
            name='TestPrices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tariff', models.DecimalField(decimal_places=2, help_text='base tariff', max_digits=20, verbose_name='tariff')),
                ('service', models.DecimalField(decimal_places=2, help_text='Medical service rate', max_digits=20, verbose_name='Medc.Serv')),
                ('dateofcreation', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
                ('priority', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='corelab.Priority', verbose_name='Priority')),
            ],
            options={
                'verbose_name': 'Test price',
                'verbose_name_plural': 'Test prices',
                'ordering': ['test', 'priority'],
                'permissions': (('view_testprices', 'Can view test prices'),),
            },
        ),
        migrations.CreateModel(
            name='TestRefRanges',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age_from', models.IntegerField(blank=True, null=True, verbose_name='Age from')),
                ('age_from_type', models.CharField(blank=True, choices=[('D', 'DAY'), ('M', 'MONTH'), ('Y', 'YEAR')], max_length=3, null=True, verbose_name='Age from unit')),
                ('age_to', models.IntegerField(blank=True, null=True, verbose_name='Age to')),
                ('age_to_type', models.CharField(blank=True, choices=[('D', 'DAY'), ('M', 'MONTH'), ('Y', 'YEAR')], max_length=3, null=True, verbose_name='Age to unit')),
                ('operator', models.CharField(blank=True, choices=[('-', 'NA'), ('>', 'GT'), ('>=', 'GTE'), ('<', 'LT'), ('<=', 'LTE')], max_length=3, null=True, verbose_name='Operator')),
                ('any_age', models.BooleanField(default=True, verbose_name='Any age?')),
                ('lower', models.FloatField(blank=True, null=True, verbose_name='lower limit')),
                ('upper', models.FloatField(blank=True, null=True, verbose_name='upper limit')),
                ('panic_lower', models.FloatField(blank=True, null=True, verbose_name='panic lower limit')),
                ('panic_upper', models.FloatField(blank=True, null=True, verbose_name='panic upper limit')),
                ('operator_value', models.FloatField(blank=True, null=True, verbose_name='operator value')),
                ('alfa_value', models.CharField(blank=True, max_length=100, null=True, verbose_name='Alfanumberic value')),
                ('special_info', models.TextField(blank=True, null=True, verbose_name='Special information')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('gender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='refranges_gender', to='corelab.Genders', verbose_name='Gender')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='Tests',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True, verbose_name='Test Name')),
                ('result_type', models.CharField(choices=[('NUM', 'NUMERIC'), ('ALF', 'ALFANUMERIC'), ('TXT', 'TEXT'), ('IMG', 'IMAGE'), ('MB', 'MIKROBIOLOGI'), ('PBS', 'PERIPHERAL BLOOD SMEAR')], default='NUM', max_length=3, verbose_name='Result Type')),
                ('can_request', models.BooleanField(default=True, verbose_name='Can request?')),
                ('can_print', models.BooleanField(default=True, verbose_name='Display at report?')),
                ('sort', models.IntegerField(help_text='Sorted priority', verbose_name='Sort')),
                ('ext_code', models.CharField(max_length=30, verbose_name='External code')),
                ('dateofcreation', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
            ],
            options={
                'verbose_name': 'Test',
                'verbose_name_plural': 'Tests',
                'ordering': ['test_group', 'name'],
                'permissions': (('view_tests', 'Can view tests'),),
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UsedAt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('is_onboard_stockcheck', models.BooleanField(default=False, verbose_name='onboard stock check?')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserExtension',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, default='avatars/avatar.jpg', null=True, upload_to='avatars/', verbose_name='Bild')),
                ('location', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='extension', to='corelab.Location', verbose_name='Location')),
                ('product_group', models.ManyToManyField(to='corelab.ProductGroup', verbose_name='Group product')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='extension', to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'User Extension',
                'verbose_name_plural': 'User Extensions',
            },
        ),
        migrations.CreateModel(
            name='UserWorkareaFilter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name')),
                ('filter_set', models.CharField(blank=True, max_length=500, null=True, verbose_name='Filter set')),
                ('default', models.BooleanField(default=True, verbose_name='Default')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, null=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='userworkareafilter_user', to=settings.AUTH_USER_MODEL, verbose_name='Pengguna')),
            ],
        ),
        migrations.CreateModel(
            name='UsingProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_use', models.DateField(auto_now_add=True, verbose_name='Date used')),
                ('lot_number', models.CharField(max_length=30, null=True, verbose_name='Lot number')),
                ('lot_expired', models.DateField(null=True, verbose_name='Expired at')),
                ('unit_used', models.IntegerField(default=1)),
                ('dateofcreation', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created at')),
                ('lastmodification', models.DateTimeField(blank=True, null=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='corelab.Product')),
                ('stock_in', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='corelab.StockIn')),
                ('unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='corelab.Unit')),
                ('used_at', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='corelab.UsedAt')),
            ],
            options={
                'ordering': ['-lastmodification'],
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Vendor name')),
                ('address', models.CharField(blank=True, max_length=200, null=True, verbose_name='Address')),
                ('country', models.CharField(blank=True, max_length=200, null=True, verbose_name='Country')),
                ('rep', models.CharField(blank=True, max_length=45, null=True)),
                ('rep_phone', models.CharField(blank=True, max_length=16, null=True)),
                ('dateofcreation', models.DateTimeField(blank=True, null=True, verbose_name='Created at')),
                ('lastmodification', models.DateTimeField(blank=True, null=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
            options={
                'verbose_name': 'Vendor',
                'verbose_name_plural': 'Vendors',
                'permissions': (('view_vendor', 'Can view vendors'),),
            },
        ),
        migrations.CreateModel(
            name='Workarea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('sort', models.IntegerField(help_text='Sorted priority', verbose_name='Sort')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
            options={
                'verbose_name': 'Workarea',
                'verbose_name_plural': 'Workareas',
                'ordering': ['name'],
                'permissions': (('view_workarea', 'Can view worakarea'),),
            },
        ),
        migrations.CreateModel(
            name='WorkareaTestGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort', models.IntegerField(help_text='Sorted priority', verbose_name='Sort')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
                ('testgroup', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='workareatestgroup_testgroup', to='corelab.TestGroups', verbose_name='Testgroup')),
                ('workarea', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='workareatestgroup_workarea', to='corelab.Workarea', verbose_name='Workarea')),
            ],
            options={
                'verbose_name': 'Workareatestgroup',
                'verbose_name_plural': 'Workareatestgroups',
                'ordering': ['sort'],
                'permissions': (('view_workareatestgroups', 'Can view workareatestgroups'),),
            },
        ),
        migrations.CreateModel(
            name='WorklistOrders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='Worklists',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_date', models.DateField(auto_now_add=True, verbose_name='Batch date')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('batch_group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='worklist_batchgroup', to='corelab.BatchGroups', verbose_name='Batch group')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='WorklistTests',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='MBOrderExtended',
            fields=[
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to='corelab.Orders')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Note for patients')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='MBTests',
            fields=[
                ('test', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to='corelab.Tests')),
                ('type', models.CharField(blank=True, choices=[('M', 'Main'), ('S', 'Secondary')], default='M', max_length=3, verbose_name='test type')),
                ('relative_value_unit', models.CharField(blank=True, max_length=200, verbose_name='Relative value unit')),
                ('sort', models.IntegerField(help_text='Sorted priority', verbose_name='Sort')),
                ('active', models.BooleanField(default=True, verbose_name='Active?')),
                ('print_isolates', models.BooleanField(default=True, verbose_name='Print isolates')),
                ('printable', models.BooleanField(default=True, verbose_name='Printable')),
                ('print_label', models.BooleanField(default=True, verbose_name='Print label')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='OrderExtended',
            fields=[
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to='corelab.Orders')),
                ('result_pdf_url', models.CharField(max_length=500, null=True, verbose_name='Result PDF url')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.CreateModel(
            name='TestParameters',
            fields=[
                ('test', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, primary_key=True, related_name='testparameteters_test', serialize=False, to='corelab.Tests')),
                ('method', models.CharField(blank=True, max_length=100, null=True, verbose_name='Method')),
                ('unit', models.CharField(blank=True, max_length=100, null=True, verbose_name='Test unit')),
                ('decimal_place', models.IntegerField(default=1, null=True, verbose_name='* place')),
                ('special_information', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Special information')),
                ('lastmodification', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Last modified')),
                ('lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by')),
            ],
        ),
        migrations.AddField(
            model_name='worklisttests',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='worklisttest_test', to='corelab.Tests', verbose_name='Test'),
        ),
        migrations.AddField(
            model_name='worklisttests',
            name='worklistorder',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='worklisttest_worklistorder', to='corelab.WorklistOrders', verbose_name='Worklist order'),
        ),
        migrations.AddField(
            model_name='worklistorders',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='worklistorder_order', to='corelab.Orders', verbose_name='Urutan'),
        ),
        migrations.AddField(
            model_name='worklistorders',
            name='worklist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='worklist_order', to='corelab.Worklists', verbose_name='Worklist'),
        ),
        migrations.AddField(
            model_name='userworkareafilter',
            name='workarea',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='userworkareafilter_workarea', to='corelab.Workarea', verbose_name='Workarea'),
        ),
        migrations.AddField(
            model_name='tests',
            name='lastmodifiedby',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by'),
        ),
        migrations.AddField(
            model_name='tests',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='corelab.Tests'),
        ),
        migrations.AddField(
            model_name='tests',
            name='specimen',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='test_specimen', to='corelab.Specimens', verbose_name='Specimen'),
        ),
        migrations.AddField(
            model_name='tests',
            name='test_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tests', to='corelab.TestGroups', verbose_name='Test Group'),
        ),
        migrations.AddField(
            model_name='testrefranges',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='refranges_test', to='corelab.Tests', verbose_name='Test'),
        ),
        migrations.AddField(
            model_name='testprices',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='test_price', to='corelab.Tests', verbose_name='Test'),
        ),
        migrations.AddField(
            model_name='stockin',
            name='storage',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='corelab.Storage'),
        ),
        migrations.AddField(
            model_name='stockin',
            name='unit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='corelab.Unit'),
        ),
        migrations.AddField(
            model_name='stockadjust',
            name='reason',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='corelab.StockAdjustReason', verbose_name='Adjust Reason'),
        ),
        migrations.AddField(
            model_name='stockadjust',
            name='storage',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='corelab.Storage'),
        ),
        migrations.AddField(
            model_name='stockadjust',
            name='unit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='corelab.Unit'),
        ),
        migrations.AddField(
            model_name='returningproduct',
            name='unit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='corelab.Unit'),
        ),
        migrations.AddField(
            model_name='returningproduct',
            name='used_from',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='corelab.UsedAt'),
        ),
        migrations.AddField(
            model_name='results',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='results_order', to='corelab.Orders', verbose_name='Urutan'),
        ),
        migrations.AddField(
            model_name='results',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='results_test', to='corelab.Tests', verbose_name='Test'),
        ),
        migrations.AddField(
            model_name='resultflags',
            name='result',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='resultflags_result', to='corelab.Results', verbose_name='Result'),
        ),
        migrations.AddField(
            model_name='resultcomments',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='corelab.Results', verbose_name='Result'),
        ),
        migrations.AddField(
            model_name='receivedsamples',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='receivedsamples_order', to='corelab.Orders', verbose_name='Urutan'),
        ),
        migrations.AddField(
            model_name='receivedsamples',
            name='sample',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='receivedsamples_tube', to='corelab.OrderSamples', verbose_name='Specimen'),
        ),
        migrations.AddField(
            model_name='receivedsamples',
            name='supergroup',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='receivedsamples_supergrup', to='corelab.SuperGroups', verbose_name='Super Group'),
        ),
        migrations.AddField(
            model_name='profiletests',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='paneltest_test', to='corelab.Tests', verbose_name='Test'),
        ),
        migrations.AddField(
            model_name='product',
            name='base_unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='product_base_unit', to='corelab.Unit'),
        ),
        migrations.AddField(
            model_name='product',
            name='group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='product_group', to='corelab.ProductGroup'),
        ),
        migrations.AddField(
            model_name='product',
            name='lastmodifiedby',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by'),
        ),
        migrations.AddField(
            model_name='product',
            name='supplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='corelab.Supplier'),
        ),
        migrations.AddField(
            model_name='product',
            name='temperature_condition',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='corelab.TemperatureCondition'),
        ),
        migrations.AddField(
            model_name='product',
            name='unit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='product_unit', to='corelab.Unit'),
        ),
        migrations.AddField(
            model_name='product',
            name='vendor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='corelab.Vendor'),
        ),
        migrations.AddField(
            model_name='pbstest',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='corelab.Tests', verbose_name='test'),
        ),
        migrations.AddField(
            model_name='pbsresult',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='corelab.Orders', verbose_name='order'),
        ),
        migrations.AddField(
            model_name='pbsresult',
            name='pbs_test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='corelab.PBSTest', verbose_name='HDT Result'),
        ),
        migrations.AddField(
            model_name='patientcomments',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='corelab.Patients', verbose_name='Patient'),
        ),
        migrations.AddField(
            model_name='ordertests',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='order_items', to='corelab.Orders', verbose_name='Urutan'),
        ),
        migrations.AddField(
            model_name='ordertests',
            name='profile',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='ordertest_profile', to='corelab.Profile', verbose_name='Profile'),
        ),
        migrations.AddField(
            model_name='ordertests',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='order_tests', to='corelab.Tests', verbose_name='Test'),
        ),
        migrations.AddField(
            model_name='ordersamples',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sample_order', to='corelab.Orders', verbose_name='Urutan'),
        ),
        migrations.AddField(
            model_name='ordersamples',
            name='specimen',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sample_specimen', to='corelab.Specimens', verbose_name='Specimen'),
        ),
        migrations.AddField(
            model_name='ordersamplelogs',
            name='order_sample',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='order_sample_log', to='corelab.OrderSamples', verbose_name='Order sample'),
        ),
        migrations.AddField(
            model_name='ordersamplelogs',
            name='request_new',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='request_new', to='corelab.RequestNewReasons', verbose_name='Request new'),
        ),
        migrations.AddField(
            model_name='orders',
            name='diagnosis',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='corelab.Diagnosis', verbose_name='Diagnosis'),
        ),
        migrations.AddField(
            model_name='orders',
            name='doctor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='corelab.Doctors', verbose_name='Sender doctor'),
        ),
        migrations.AddField(
            model_name='orders',
            name='insurance',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='corelab.Insurance', verbose_name='Insurance'),
        ),
        migrations.AddField(
            model_name='orders',
            name='lastmodifiedby',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by'),
        ),
        migrations.AddField(
            model_name='orders',
            name='origin',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='corelab.Origins', verbose_name='Origin'),
        ),
        migrations.AddField(
            model_name='orders',
            name='patient',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='corelab.Patients', verbose_name='Patient'),
        ),
        migrations.AddField(
            model_name='orders',
            name='priority',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='corelab.Priority', verbose_name='Order priority'),
        ),
        migrations.AddField(
            model_name='orders',
            name='service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='corelab.Service', verbose_name='Service'),
        ),
        migrations.AddField(
            model_name='orderresults',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orderresults_order', to='corelab.Orders', verbose_name='Urutan'),
        ),
        migrations.AddField(
            model_name='orderresults',
            name='result',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='orderresults_result', to='corelab.Results', verbose_name='Result'),
        ),
        migrations.AddField(
            model_name='orderresults',
            name='sample',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sampleresults_order', to='corelab.OrderSamples', verbose_name='Order Sample'),
        ),
        migrations.AddField(
            model_name='orderresults',
            name='test',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='orderresults_test', to='corelab.Tests', verbose_name='Test'),
        ),
        migrations.AddField(
            model_name='orderingstockin',
            name='ordering',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='corelab.Product'),
        ),
        migrations.AddField(
            model_name='orderingstockin',
            name='stockin',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='orderingstock', to='corelab.StockIn'),
        ),
        migrations.AddField(
            model_name='ordering',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='corelab.Product'),
        ),
        migrations.AddField(
            model_name='ordering',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='corelab.Supplier'),
        ),
        migrations.AddField(
            model_name='ordering',
            name='unit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='corelab.Unit'),
        ),
        migrations.AddField(
            model_name='orderdiagnosis',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='order_diagitems', to='corelab.Orders', verbose_name='Urutan'),
        ),
        migrations.AddField(
            model_name='ordercomments',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='corelab.Orders', verbose_name='Urutan'),
        ),
        migrations.AddField(
            model_name='mbresultheader',
            name='mb_result',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='mbresultheader_mbresult', to='corelab.MBResults', verbose_name='MB Result'),
        ),
        migrations.AddField(
            model_name='mbresultheader',
            name='order_test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='mbresultheader_ordertest', to='corelab.OrderTests', verbose_name='Order test'),
        ),
        migrations.AddField(
            model_name='mbresultgroupitems',
            name='mb_result',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='mbresultgroupitem_mbresult', to='corelab.MBResults', verbose_name='Result'),
        ),
        migrations.AddField(
            model_name='mbresultgroupitems',
            name='mb_result_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='mbresultgroupitem_mbresultgroup', to='corelab.MBResultGroups', verbose_name='Result groups'),
        ),
        migrations.AddField(
            model_name='mbresultdetail',
            name='mb_result_header',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='mbresultdetail_mbresultheader', to='corelab.MBResultHeader', verbose_name='MB Result Header'),
        ),
        migrations.AddField(
            model_name='mbantibiograms',
            name='mb_antibiotic_method',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='mbantibiogram_mbantibioticmethod', to='corelab.MBAntibioticMethods', verbose_name='Antibiotic method'),
        ),
        migrations.AddField(
            model_name='mbantibiogramantibiotics',
            name='mb_antibiogram',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='mbantibiogram_mbantibiogram', to='corelab.MBAntibiograms', verbose_name='Antibiogram'),
        ),
        migrations.AddField(
            model_name='mbantibiogramantibiotics',
            name='mb_antibiotic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='mbantibiogram_mbantibiotic', to='corelab.MBAntibiotics', verbose_name='Antibiotic'),
        ),
        migrations.AddField(
            model_name='instrumenttests',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='instrumentflags_test', to='corelab.Tests', verbose_name='Test'),
        ),
        migrations.AddField(
            model_name='instrumentflags',
            name='instrument',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='instrumenttests_instrument', to='corelab.Instruments', verbose_name='Instrument'),
        ),
        migrations.AddField(
            model_name='instrumentflags',
            name='lastmodifiedby',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by'),
        ),
        migrations.AddField(
            model_name='instrumentbatch',
            name='instrument',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='instrumentbatch_instrument', to='corelab.Instruments', verbose_name='Instrument'),
        ),
        migrations.AddField(
            model_name='instrumentbatch',
            name='lastmodifiedby',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by'),
        ),
        migrations.AddField(
            model_name='instrumentbatch',
            name='order_sample',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='instrumentbatch_ordersample', to='corelab.OrderSamples', verbose_name='Order sample'),
        ),
        migrations.AddField(
            model_name='historyorders',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='historyorder_order', to='corelab.Orders', verbose_name='Urutan'),
        ),
        migrations.AddField(
            model_name='historyorders',
            name='test',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='historyorder_test', to='corelab.Tests', verbose_name='Test'),
        ),
        migrations.AddField(
            model_name='closingusingproduct',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='corelab.Product'),
        ),
        migrations.AddField(
            model_name='closingusingproduct',
            name='stock_in',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='corelab.StockIn'),
        ),
        migrations.AddField(
            model_name='closingusingproduct',
            name='unit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='corelab.Unit'),
        ),
        migrations.AddField(
            model_name='closingusingproduct',
            name='used_at',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='corelab.UsedAt'),
        ),
        migrations.AddField(
            model_name='closingstockin',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='corelab.Product'),
        ),
        migrations.AddField(
            model_name='closingstockin',
            name='storage',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='corelab.Storage'),
        ),
        migrations.AddField(
            model_name='closingstockin',
            name='unit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='corelab.Unit'),
        ),
        migrations.AddField(
            model_name='bdpermintaandarahheader',
            name='doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bdpermintaanbankdarahheader_doctor', to='corelab.Priority', verbose_name='Doctor'),
        ),
        migrations.AddField(
            model_name='bdpermintaandarahheader',
            name='insurance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bdpermintaanbankdarahheader_insurance', to='corelab.Insurance', verbose_name='Insurance'),
        ),
        migrations.AddField(
            model_name='bdpermintaandarahheader',
            name='lastmodifiedby',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by'),
        ),
        migrations.AddField(
            model_name='bdpermintaandarahheader',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bdpermintaanbankdarahheader_organization', to='corelab.Organizations', verbose_name='Organization'),
        ),
        migrations.AddField(
            model_name='bdpermintaandarahheader',
            name='origin',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bdpermintaanbankdarahheader_origin', to='corelab.Origins', verbose_name='Origin'),
        ),
        migrations.AddField(
            model_name='bdpermintaandarahheader',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bdpermintaanbankdarahheader_patient', to='corelab.Patients', verbose_name='Patient'),
        ),
        migrations.AddField(
            model_name='bdpermintaandarahheader',
            name='priority',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bdpermintaanbankdarahheader_priority', to='corelab.Priority', verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='bdpermintaandarahdetail',
            name='bd_permintaan_darah_header',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bdpermintaanbankdarahdetail_bdpermintaanbankdarahheader', to='corelab.BDPermintaanDarahHeader', verbose_name='Permintaan darah header'),
        ),
        migrations.AddField(
            model_name='bdpermintaandarahdetail',
            name='lastmodifiedby',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by'),
        ),
        migrations.AddField(
            model_name='bddarahmasuk',
            name='bd_jenis_darah',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bddarahmasuk_bdjenisdarah', to='corelab.BDJenisDarah', verbose_name='Jenis darah'),
        ),
        migrations.AddField(
            model_name='bddarahmasuk',
            name='lastmodifiedby',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Last modified by'),
        ),
        migrations.AddField(
            model_name='batchgrouptests',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='batchgroup_test', to='corelab.Tests', verbose_name='Test'),
        ),
        migrations.AlterUniqueTogether(
            name='pbsresult',
            unique_together=set([('order', 'pbs_test')]),
        ),
        migrations.AlterUniqueTogether(
            name='orderresults',
            unique_together=set([('order', 'test')]),
        ),
        migrations.AddField(
            model_name='mbtestculturemedia',
            name='mb_test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='mbtestculturemdia_mbtest', to='corelab.MBTests', verbose_name='Test'),
        ),
        migrations.AlterUniqueTogether(
            name='mbresultdetailantibiotics',
            unique_together=set([('mb_result_detail', 'mb_antibiotic')]),
        ),
        migrations.AlterUniqueTogether(
            name='mbresultdetail',
            unique_together=set([('mb_result_header', 'mb_antibiogram')]),
        ),
        migrations.AlterUniqueTogether(
            name='mbantibiogramantibiotics',
            unique_together=set([('mb_antibiogram', 'mb_antibiotic')]),
        ),
    ]
